{"version":3,"file":"static/js/MainPage.ee2faf6b.chunk.js","mappings":"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","sources":["components/CartEmpty.tsx","components/CartItem.tsx","components/CustomPagination/index.tsx","components/productCard/ProductCard.tsx","components/productCard/Skeleton.tsx","components/Categories.tsx","components/Sort.tsx","pages/MainPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartEmpty: React.FC = () => {\r\n  return (\r\n    <div className=\"cart cart--empty\">\r\n      <h2>Cart is empty</h2>\r\n      <p>\r\n        Most likely, you have not placed an order yet.<br />\r\n        To place an order, go to the main page.\r\n      </p>\r\n      <br/>\r\n      <Link to=\"/\" className=\"button button--black\">\r\n        <span>To Home</span>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartEmpty;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { CartItem, addItem, minusItem, removeItem } from '../redux/slices/cartSlice';\r\n\r\ntype CartItemProps = {\r\n  id: string,\r\n  title: string,\r\n  type: string,\r\n  size: number,\r\n  price: number,\r\n  count: number,\r\n  imageUrl: string\r\n}\r\n\r\nconst CartItemBlock: React.FC<CartItemProps> = ({ id, title, type, size, price, count, imageUrl }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickPlus = () => {\r\n    dispatch(\r\n      addItem({\r\n        id,\r\n      } as CartItem)\r\n    );\r\n  };\r\n\r\n  const onClickMinus = () => {\r\n    if (count > 1) {\r\n      dispatch(minusItem(id));\r\n    }\r\n  };\r\n\r\n  const onClickRemove = () => {\r\n    if (window.confirm('Are you sure want to remove it?')) {\r\n      dispatch(removeItem(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart__item\">\r\n      <div className=\"cart__item-img\">\r\n        <img\r\n        className=\"pizza-block__image\"\r\n        src={imageUrl}\r\n        alt=\"Pizza\"\r\n        />\r\n      </div>\r\n      <div className=\"cart__item-info\">\r\n        <h3>{title}</h3>\r\n        <p>{type}, {size}</p>\r\n      </div>\r\n      <div className=\"cart__item-count\">\r\n        <button \r\n          disabled={count === 1}\r\n          onClick={onClickMinus} \r\n          className=\"button button--outline button--circle cart__item-count-minus\">\r\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\"/>\r\n            <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\"/>\r\n          </svg>\r\n\r\n        </button>\r\n        <b>{count}</b>\r\n        <button onClick={onClickPlus} className=\"button button--outline button--circle cart__item-count-plus\">\r\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\"/>\r\n            <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\"/>\r\n          </svg>\r\n\r\n        </button>\r\n      </div>\r\n      <div className=\"cart__item-price\">\r\n        <b>{price * count} €</b>\r\n      </div>\r\n      <div className=\"cart__item-remove\">\r\n        <div onClick={onClickRemove} className=\"button button--outline button--circle\">\r\n          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\"/>\r\n            <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\"/>\r\n          </svg>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartItemBlock;","import React from 'react';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport { Pagination } from '@mui/material';\r\n// import styles from './Pagination.scss';\r\n\r\ntype PaginationProps = {\r\n  currentPage: number,\r\n  onChangePage: (page: number) => void\r\n}\r\n\r\nconst CustomPagination: React.FC<PaginationProps> = ({ currentPage, onChangePage }) => {\r\n  return (\r\n    <Pagination\r\n      count={2}\r\n      page={currentPage}\r\n      onChange={(event, page) => onChangePage(page)}\r\n      boundaryCount={1}\r\n      color=\"primary\"\r\n      shape=\"rounded\"\r\n      siblingCount={1}\r\n      showFirstButton\r\n      showLastButton\r\n    />\r\n  )\r\n}\r\n\r\nexport default CustomPagination;","import React, { useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { CartItem, addItem, selectCartItemById } from '../../redux/slices/cartSlice';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\n\r\nimport Grid from '@mui/material/Unstable_Grid2'; \r\n\r\nconst typeNames = ['Man', 'Woman'];\r\n\r\ntype ProductCardProps = {\r\n  id: string, \r\n  title: string, \r\n  price: number, \r\n  imageUrl: string, \r\n  sizes: number[], \r\n  types: number[]\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({id, title, price, imageUrl, sizes, types}) => {\r\n  const dispatch = useDispatch();\r\n  const cartItem = useSelector(selectCartItemById(id));\r\n  const [activeType, setActiveType] = useState(0);\r\n  const [activeSize, setActiveSize] = useState(0);\r\n\r\n  const addedCount = cartItem ? cartItem.count : 0;\r\n\r\n  const onClickAdd = () => {\r\n    const item: CartItem = {\r\n      id,\r\n      title,\r\n      price,\r\n      imageUrl,\r\n      type: typeNames[activeType],\r\n      size: sizes[activeSize],\r\n      count: 0,\r\n    }\r\n    dispatch(addItem(item));\r\n  }\r\n\r\n  return (\r\n    <Grid sm={6} md={3}>\r\n      <Card className=\"product\">\r\n        <CardActionArea>\r\n          <Link to={`/t-shirts/${id}`}>\r\n            <img\r\n              className=\"product__image\"\r\n              src={imageUrl}\r\n              alt=\"T-Shirt\"\r\n            />\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\" className=\"product__title\">{title}</Typography>\r\n          </Link>\r\n        </CardActionArea>\r\n        <CardContent>\r\n          <div className=\"product__selector\">\r\n            <ul>\r\n              {\r\n                types.map((typeId, i) => (\r\n                  <li \r\n                    key={typeId}\r\n                    onClick={() => setActiveType(i)} \r\n                    className={activeType === i ? 'active' : ''}\r\n                    >\r\n                    {typeNames[typeId]}\r\n                  </li>\r\n                ))\r\n              }\r\n            </ul>\r\n            <ul>\r\n              {\r\n                sizes.map((size, i) => (\r\n                  <li \r\n                    key={size}\r\n                    onClick={() => setActiveSize(i)} \r\n                    className={activeSize === i ? 'active' : ''}\r\n                    >\r\n                    {size}\r\n                  </li>\r\n                ))\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"product__bottom\">\r\n            <div className=\"product__price\">{price} €</div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClickAdd} className=\"button--add\">\r\n              {/* icon */}\r\n              <span>Add</span>\r\n              {addedCount > 0 && <i>{addedCount}</i>}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card> \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ProductCard;","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst Skeleton: React.FC = () => (\r\n   <ContentLoader \r\n   className=\"product\"\r\n    speed={3}\r\n    width={280}\r\n    height={465}\r\n    viewBox=\"0 0 280 465\"\r\n    backgroundColor=\"#f3f3f3\"\r\n    foregroundColor=\"#ecebeb\"\r\n  >\r\n    <path d=\"M 214.6 16.1 L 176.3 7 S 165.6 25.8 140 25.8 S 103.7 7 103.7 7 l -38.3 9.1 l -55.8 50 l 27.8 43.1 l 28 -13.1 v 152.4 h 149.1 V 96.1 l 28 13.1 l 27.8 -43.1 l -55.7 -50 z M 274 288.3 H 6 c -3.3 0 -6 -2.7 -6 -6 v -15.1 c 0 -3.3 2.7 -6 6 -6 h 268 c 3.3 0 6 2.7 6 6 v 15.1 c 0 3.3 -2.7 6 -6 6 z M 273.5 397 H 6.5 c -3.6 0 -6.5 -2.9 -6.5 -6.5 v -73.6 c 0 -3.6 2.9 -6.5 6.5 -6.5 h 267.1 c 3.6 0 6.5 2.9 6.5 6.5 v 73.6 c -0.1 3.6 -3 6.5 -6.6 6.5 z M 93.8 459.3 H 6.5 c -3.6 0 -6.5 -2.9 -6.5 -6.5 v -32.2 c 0 -3.6 2.9 -6.5 6.5 -6.5 h 87.3 c 3.6 0 6.5 2.9 6.5 6.5 v 32.2 c 0 3.6 -2.9 6.5 -6.5 6.5 z M 273.5 459.3 h -87.3 c -3.6 0 -6.5 -2.9 -6.5 -6.5 v -32.2 c 0 -3.6 2.9 -6.5 6.5 -6.5 h 87.3 c 3.6 0 6.5 2.9 6.5 6.5 v 32.2 c 0 3.6 -2.9 6.5 -6.5 6.5 z\" />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default Skeleton;","import React, { memo } from \"react\";\r\n\r\ntype CategoriesProps = {\r\n  value: number;\r\n  onChangeCategory: (i: number) => void;\r\n}\r\n\r\nconst categories = ['All', 'Games', 'Movies', 'IT', 'Comics'];\r\n\r\nconst Categories: React.FC<CategoriesProps> = memo(({ value, onChangeCategory }) => {\r\n\r\n  // const onChangeCategory = (index) => {\r\n  //   setActiveIndex(index)\r\n  // }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <ul>\r\n        {categories.map((categoryName, i) => (\r\n          <li \r\n            key={categoryName} \r\n            onClick={() => onChangeCategory(i)} \r\n            className={value === i ? 'active': ''}>\r\n            {categoryName}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Categories;","import React, { useEffect, useRef, useState, memo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSort, selectSort } from '../redux/slices/filterSlice';\r\n\r\ntype SortListItem = {\r\n  name: string;\r\n  sortProperty: 'rating' | 'price' | '-price' | 'title';\r\n};\r\n\r\nexport const listPopup: SortListItem[] = [\r\n  { name: 'popularity', sortProperty: 'rating'}, \r\n  { name: 'price (desc)', sortProperty: 'price'}, \r\n  { name: 'price (asc)', sortProperty: '-price'}, \r\n  { name: 'title', sortProperty: 'title'}\r\n];\r\n\r\nconst Sort: React.FC = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const sort = useSelector(selectSort);\r\n  const sortRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const onClickListPopup = (obj: SortListItem) => {\r\n    dispatch(setSort(obj));\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (sortRef.current && !event.composedPath().includes(sortRef.current)) {\r\n        setOpen(false);\r\n      }\r\n    }\r\n    document.body.addEventListener('click', handleClickOutside);\r\n\r\n    return () => document.body.removeEventListener('click',handleClickOutside); \r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortRef} className=\"sort\">\r\n      <div className=\"sort__label\">\r\n        <svg\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <b>Sort by:</b>\r\n        <span onClick={() => setOpen(!open)}>{sort.name}</span>\r\n      </div>\r\n      {open && (\r\n        <div className=\"sort__popup\">\r\n          <ul>\r\n            {\r\n              listPopup.map((obj) => (\r\n                <li \r\n                  key={obj.name}\r\n                  onClick={() => onClickListPopup(obj)} \r\n                  className={sort.sortProperty === obj.sortProperty ? 'active' : ''}\r\n                  >\r\n                  {obj.name}\r\n                </li>\r\n              ))\r\n            }\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) \r\n})\r\n\r\nexport default Sort;","import { useCallback, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { setCategoryId, setCurrentPage  } from '../redux/slices/filterSlice';\r\nimport { fetchProducts, selectProducts } from '../redux/slices/productsSlice';\r\nimport { selectFilter } from '../redux/slices/filterSlice';\r\nimport { useAppDispatch } from '../redux/store';\r\n\r\nimport { Categories, Sort, ProductCard, Skeleton, CustomPagination } from '../components';\r\n\r\nimport Grid from '@mui/material/Unstable_Grid2'; \r\n\r\nconst MainPage: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter);\r\n  const { items, status } = useSelector(selectProducts);\r\n  const sortType = sort.sortProperty;\r\n\r\n  const onChangeCategory = useCallback((id: number) => {\r\n    dispatch(setCategoryId(id));\r\n  }, []);\r\n\r\n  const onChangePage = (page: number) => {\r\n    dispatch(setCurrentPage(page));\r\n  }\r\n\r\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index}/>);\r\n  const productsFiltered = items.map((item: any) => <ProductCard key={item.id}  {...item}/>);\r\n\r\n  const getProducts = async () => {\r\n\r\n    const order = sortType.includes('-') ? 'asc' : 'desc';\r\n    const sortBy = sortType.replace('-', '');\r\n    const categorySort =  categoryId > 0 ? `category=${categoryId}` : '';\r\n    const search = searchValue ? `&search=${searchValue}` : '';\r\n  \r\n    dispatch(\r\n      fetchProducts({\r\n        sortBy,\r\n        order,\r\n        categorySort,\r\n        search,\r\n        currentPage: String(currentPage),\r\n      })\r\n    )\r\n\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [categoryId, sortType, searchValue, currentPage]);\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"content__top\">\r\n          <Categories value={categoryId} onChangeCategory={onChangeCategory}/>\r\n          <Sort/>\r\n        </div>\r\n        <h2 className=\"content__title\">All products</h2>\r\n        { status === 'error' ? (\r\n          <div className='content__error'>\r\n            <h2>An error occurred</h2>\r\n          </div>\r\n        ) : (\r\n          <Grid container spacing={2} className=\"content__items\">\r\n            {\r\n              status === 'loading'\r\n              ? skeletons\r\n              : productsFiltered\r\n            }\r\n          </Grid>\r\n        )}\r\n        \r\n        <CustomPagination currentPage={currentPage} onChangePage={onChangePage}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;"],"names":["_jsxs","className","children","_jsx","Link","to","_ref","id","title","type","size","price","count","imageUrl","dispatch","useDispatch","src","alt","disabled","onClick","minusItem","width","height","viewBox","fill","xmlns","d","addItem","window","confirm","removeItem","currentPage","onChangePage","Pagination","page","onChange","event","boundaryCount","color","shape","siblingCount","showFirstButton","showLastButton","typeNames","sizes","types","cartItem","useSelector","selectCartItemById","_useState","useState","_useState2","_slicedToArray","activeType","setActiveType","_useState3","_useState4","activeSize","setActiveSize","addedCount","Grid","sm","md","Card","CardActionArea","concat","Typography","gutterBottom","variant","component","CardContent","map","typeId","i","Button","item","ContentLoader","speed","backgroundColor","foregroundColor","categories","memo","value","onChangeCategory","categoryName","listPopup","name","sortProperty","sort","selectSort","sortRef","useRef","open","setOpen","useEffect","handleClickOutside","current","composedPath","includes","document","body","addEventListener","removeEventListener","ref","obj","setSort","onClickListPopup","useAppDispatch","_useSelector","selectFilter","categoryId","searchValue","_useSelector2","selectProducts","items","status","sortType","useCallback","setCategoryId","skeletons","_toConsumableArray","Array","_","index","Skeleton","productsFiltered","ProductCard","_objectSpread","getProducts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","order","sortBy","categorySort","search","wrap","_context","prev","next","replace","fetchProducts","String","scrollTo","stop","apply","arguments","_Fragment","Categories","Sort","container","spacing","CustomPagination","setCurrentPage"],"sourceRoot":""}